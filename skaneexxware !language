--[[

   _____           _       _                         _           _   _                 _                                    
  / ____|         (_)     | |                       | |         | | | |               | |                                   
 | (___   ___ _ __ _ _ __ | |_    ___ _ __ ___  __ _| |_ ___  __| | | |__  _   _   ___| | ____ _ _ __   ___  _____  ____  __
  \___ \ / __| '__| | '_ \| __|  / __| '__/ _ \/ _` | __/ _ \/ _` | | '_ \| | | | / __| |/ / _` | '_ \ / _ \/ _ \ \/ /\ \/ /
  ____) | (__| |  | | |_) | |_  | (__| | |  __/ (_| | ||  __/ (_| | | |_) | |_| | \__ \   < (_| | | | |  __/  __/>  <  >  < 
 |_____/ \___|_|  |_| .__/ \__|  \___|_|  \___|\__,_|\__\___|\__,_| |_.__/ \__, | |___/_|\_\__,_|_| |_|\___|\___/_/\_\/_/\_\
                    | |                                                     __/ |                                           
                    |_|                                                    |___/                       
                     
]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v85=0;while true do if (v85==0) then v19=v0(v3(v30,1,1));return "";end end else local v86=v2(v0(v30,16));if v19 then local v118=0;local v119;while true do if (v118==0) then v119=v5(v86,v19);v19=nil;v118=1;end if (v118==1) then return v119;end end else return v86;end end end);local function v20(v31,v32,v33) if v33 then local v87=(v31/((5 -3)^(v32-(2 -1))))%(2^(((v33-(1 -(877 -(282 + 595)))) -(v32-(2 -1))) + 1)) ;return v87-(v87%(620 -(555 + 64))) ;else local v88=931 -(857 + 74) ;local v89;while true do if (v88==(568 -(367 + 201))) then v89=(929 -((1851 -(1523 + 114)) + 713))^(v32-(1 + 0)) ;return (((v31%(v89 + v89))>=v89) and (1 + 0)) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (2 -0) );v18=v18 + (1067 -(68 + 997)) ;return (v36 * (1526 -(226 + 1044))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (960 -(892 + 65)) );v18=v18 + (17 -13) ;return (v40 * (16777333 -(32 + 85))) + (v39 * (64226 + 1310)) + (v38 * (57 + 199)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=2 -1 ;local v44=(v20(v42,1 -(0 -0) ,36 -(16 + 0) ) * (2^(382 -(87 + 263)))) + v41 ;local v45=v20(v42,201 -(67 + 113) ,23 + 8 );local v46=((v20(v42,78 -46 )==(1 + (791 -(368 + 423)))) and  -(3 -2)) or 1 ;if (v45==(952 -((2520 -1718) + 150))) then if (v44==(0 -0)) then return v46 * 0 ;else local v120=0 -0 ;while true do if (((18 -(10 + 8)) + (0 -0))==v120) then v45=998 -(915 + 82) ;v43=0 -0 ;break;end end end elseif (v45==(1193 + 854)) then return ((v44==(0 -0)) and (v46 * ((1188 -(1069 + 118))/(0 -0)))) or (v46 * NaN) ;end return v8(v46,v45-((2679 -(416 + 26)) -1214) ) * (v43 + (v44/((1 + 1)^52))) ;end local function v25(v47) local v48;if  not v47 then local v90=(438 -(145 + 293)) -0 ;while true do if (v90==(0 + 0)) then v47=v23();if (v47==(430 -(44 + 386))) then return "";end break;end end end v48=v3(v16,v18,(v18 + v47) -(1 -0) );v18=v18 + v47 ;local v49={};for v66=1, #v48 do v49[v66]=v2(v1(v3(v48,v66,v66)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 0 -0 ;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if (v91== #"!") then if (v92== #"]") then v93=(function() return v94()~=(578 -(386 + 192)) ;end)();elseif (v92==(1208 -(696 + 510))) then v93=(function() return v95();end)();elseif (v92== #"91(") then v93=(function() return v96();end)();end v97[v98]=(function() return v93;end)();break;end if (v91~=(0 -0)) then else local v126=(function() return 1262 -(1091 + 171) ;end)();local v127=(function() return;end)();while true do if (v126~=0) then else v127=(function() return 0;end)();while true do if (0~=v127) then else v92=(function() return v94();end)();v93=(function() return nil;end)();v127=(function() return 1;end)();end if ((1 + 0)==v127) then v91=(function() return  #">";end)();break;end end break;end end end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v51=(function() return function(v99,v100,v101,v102,v103,v104,v105,v106,v107) local v108=(function() return 0;end)();local v99=(function() return;end)();local v100=(function() return;end)();while true do local v117=(function() return 0;end)();while true do if (v117~=0) then else if (v108==1) then local v128=(function() return 0 -0 ;end)();while true do if (v128~=(0 -0)) then else local v131=(function() return 0;end)();while true do if (v131~=0) then else while true do if ((374 -(123 + 251))==v99) then v100=(function() return v101();end)();if (v102(v100, #"[", #",")==0) then local v383=(function() return 0;end)();local v384=(function() return;end)();local v385=(function() return;end)();local v386=(function() return;end)();while true do if (v383==(14 -11)) then if (v102(v385, #"asd", #"19(")== #"~") then v386[ #"?id="]=(function() return v105[v386[ #"0313"]];end)();end v106[v107]=(function() return v386;end)();break;end if (v383==(698 -(208 + 490))) then v384=(function() return v102(v100,1 + 1 , #"gha");end)();v385=(function() return v102(v100, #".com",3 + 3 );end)();v383=(function() return 1;end)();end if (v383==1) then local v434=(function() return 836 -(660 + 176) ;end)();local v435=(function() return;end)();while true do if (v434==(0 + 0)) then v435=(function() return 202 -(14 + 188) ;end)();while true do if (v435==0) then local v454=(function() return 675 -(534 + 141) ;end)();while true do if (0==v454) then v386=(function() return {v103(),v103(),nil,nil};end)();if (v384==0) then local v455=(function() return 0 + 0 ;end)();local v456=(function() return;end)();while true do if (v455==(0 + 0)) then v456=(function() return 0 + 0 ;end)();while true do if (v456~=0) then else v386[ #"xnx"]=(function() return v103();end)();v386[ #"http"]=(function() return v103();end)();break;end end break;end end elseif (v384== #"[") then v386[ #"-19"]=(function() return v104();end)();elseif (v384==2) then v386[ #"xnx"]=(function() return v104() -(2^(33 -17)) ;end)();elseif (v384== #"19(") then local v461=(function() return 0;end)();local v462=(function() return;end)();while true do if (v461==(0 -0)) then v462=(function() return 0 -0 ;end)();while true do if (v462==0) then v386[ #"91("]=(function() return v104() -(2^(9 + 7)) ;end)();v386[ #"?id="]=(function() return v103();end)();break;end end break;end end end v454=(function() return 1;end)();end if ((1 + 0)==v454) then v435=(function() return 1;end)();break;end end end if (v435~=(397 -(115 + 281))) then else v383=(function() return 4 -2 ;end)();break;end end break;end end end if (v383~=2) then else if (v102(v385, #"[", #"<")== #"~") then v386[2]=(function() return v105[v386[2]];end)();end if (v102(v385,2,2)== #"}") then v386[ #"19("]=(function() return v105[v386[ #"91("]];end)();end v383=(function() return 3 + 0 ;end)();end end end break;end end return v99,v100,v101,v102,v103,v104,v105,v106,v107;end end end end end if (v108~=(0 -0)) then else local v129=(function() return 0 -0 ;end)();while true do if (v129~=(867 -(550 + 317))) then else v99=(function() return 0 -0 ;end)();v100=(function() return nil;end)();v129=(function() return 1 -0 ;end)();end if (v129==1) then v108=(function() return 1;end)();break;end end end break;end end end end;end)();local v52=(function() return function(v109,v110,v111) local v112=(function() return 0;end)();local v113=(function() return;end)();while true do if (v112==(0 -0)) then v113=(function() return 285 -(134 + 151) ;end)();while true do if ((1665 -(970 + 695))==v113) then local v130=(function() return 0 -0 ;end)();while true do if (v130~=0) then else v109[v110-#"[" ]=(function() return v111();end)();return v109,v110,v111;end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #",",v57 do FlatIdent_31A5A,Type,Cons,v21,v24,v25,v58,v68=(function() return v50(FlatIdent_31A5A,Type,Cons,v21,v24,v25,v58,v68);end)();end v56[ #"-19"]=(function() return v21();end)();for v69= #"\\",v23() do FlatIdent_31905,Descriptor,v21,v20,v22,v23,v58,v53,v69=(function() return v51(FlatIdent_31905,Descriptor,v21,v20,v22,v23,v58,v53,v69);end)();end for v70= #"\\",v23() do v54,v70,v28=(function() return v52(v54,v70,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[3 -(1278 -(316 + 960)) ];local v64=v60[2 -0 ];local v65=v60[11 -8 ];return function(...) local v71=v63;local v72=v64;local v73=v65;local v74=v27;local v75=1;local v76= -(1 + 0);local v77={};local v78={...};local v79=v12("#",...) -1 ;local v80={};local v81={};for v114=1824 -(1195 + 629) ,v79 do if ((v114>=v73) or (2219>2834)) then v77[v114-v73 ]=v78[v114 + (1 -0) ];else v81[v114]=v78[v114 + (242 -(187 + 42 + 12)) ];end end local v82=(v79-v73) + ((722 + 59) -(162 + 618)) ;local v83;local v84;while true do v83=v71[v75];v84=v83[1];if (v84<=(30 + 12)) then if ((v84<=(14 + 6)) or (802>1683)) then if (v84<=(18 -9)) then if ((90<1065) and (v84<=((22 -16) -2))) then if (v84<=(1 + (551 -(83 + 468)))) then if ((4802==4802) and (v84>(1636 -(1373 + 263)))) then local v133=1000 -(451 + 549) ;local v134;while true do if (v133==0) then v134=v83[1 + 1 ];v81[v134]=v81[v134]();break;end end else local v135=0 -0 ;local v136;while true do if (((0 -0)==v135) or (2280<=511)) then v136=v83[2];do return v13(v81,v136,v76);end break;end end end elseif (v84<=(1386 -(746 + 638))) then v81[v83[1 + (1807 -(1202 + 604)) ]]={};elseif ((v84>3) or (1676<=463)) then if (v81[v83[2 -0 ]]~=v83[4]) then v75=v75 + 1 ;else v75=v83[3];end else for v306=v83[343 -(218 + 123) ],v83[1584 -(1535 + 46) ] do v81[v306]=nil;end end elseif (v84<=(27 -21)) then if (v84>(5 + 0)) then local v138=0 + 0 ;local v139;local v140;local v141;while true do if (v138==(561 -(306 + 254))) then v141=0 -0 ;for v347=v139,v83[1 + 3 ] do v141=v141 + (1 -0) ;v81[v347]=v140[v141];end break;end if ((3869==3869) and (v138==(1467 -(899 + (1572 -1004))))) then v139=v83[2];v140={v81[v139](v81[v139 + (2 -1) ])};v138=604 -((593 -(45 + 280)) + 335) ;end end elseif (v81[v83[292 -(60 + 230) ]]==v83[576 -(426 + 146) ]) then v75=v75 + 1 + 0 ;else v75=v83[1459 -(282 + 1174) ];end elseif (v84<=(818 -(569 + 242))) then local v142=v83[2];local v143,v144=v74(v81[v142](v13(v81,v142 + (2 -(1 + 0)) ,v76)));v76=(v144 + v142) -(1 + 0 + 0) ;local v145=1024 -(706 + 318) ;for v208=v142,v76 do local v209=1251 -(264 + 457 + 294 + 236) ;while true do if (v209==(1271 -(945 + 326))) then v145=v145 + (2 -1) ;v81[v208]=v143[v145];break;end end end elseif (v84==(8 + 0)) then local v217=0;local v218;local v219;while true do if (v217==(701 -(48 + 223 + 429))) then for v412=v218 + 1 + 0 ,v83[1504 -(1408 + 92) ] do v219=v219   .. v81[v412] ;end v81[v83[1088 -(461 + 625) ]]=v219;break;end if (v217==(1288 -(993 + 295))) then v218=v83[1 + 2 ];v219=v81[v218];v217=1172 -(418 + 753) ;end end else local v220=v83[1 + 1 ];local v221={v81[v220](v81[v220 + 1 + 0 ])};local v222=0 + 0 ;for v309=v220,v83[2 + 2 ] do v222=v222 + (530 -(406 + 123)) ;v81[v309]=v221[v222];end end elseif (v84<=(1783 -(1749 + (37 -17)))) then if (v84<=(3 + 8)) then if (v84>(1332 -(1249 + (1984 -(340 + 1571))))) then v81[v83[1 + 1 ]]=v29(v72[v83[1148 -(466 + 679) ]],nil,v62);else v61[v83[(3 + 3) -(1775 -(1733 + 39)) ]]=v81[v83[2]];end elseif ((1158<=2613) and (v84<=(34 -22))) then local v149=v83[1902 -(106 + 1794) ];local v150,v151=v74(v81[v149](v13(v81,v149 + 1 + 0 ,v76)));v76=(v151 + v149) -(1 + 0) ;local v152=0 -0 ;for v210=v149,v76 do local v211=0;while true do if (v211==(0 -0)) then v152=v152 + (115 -(4 + 110)) ;v81[v210]=v150[v152];break;end end end elseif (v84==(35 -22)) then local v223=0;local v224;while true do if (v223==(584 -(57 + (1561 -(125 + 909))))) then v224=v83[2];v81[v224](v81[v224 + (1428 -(41 + 1386)) ]);break;end end else local v225=v81[v83[107 -(17 + 86) ]];if ( not v225 or (2364<=1999)) then v75=v75 + 1 + 0 ;else local v354=(1948 -(1096 + 852)) -0 ;while true do if (v354==(0 -0)) then v81[v83[2]]=v225;v75=v83[169 -(122 + 44) ];break;end end end end elseif ((v84<=17) or (4922<194)) then if ((v84<=(25 -10)) or (2091<31)) then local v153=0;local v154;while true do if ((v153==(0 -0)) or (2430>=4872)) then v154=v83[2 + 0 ];do return v13(v81,v154,v154 + v83[3] );end break;end end elseif ((v84==16) or (4770<1735)) then v75=v83[1 + 2 ];elseif v81[v83[3 -1 ]] then v75=v75 + 1 ;else v75=v83[68 -(30 + 35) ];end elseif (v84<=(13 + 3 + 2)) then v81[v83[1259 -(1043 + (305 -91)) ]]=v62[v83[(11 + 0) -8 ]];elseif ((v84==(1231 -(323 + 889))) or (4439<=2350)) then v81[v83[(517 -(409 + 103)) -3 ]]=v81[v83[239 -(46 + 190) ]];else v81[v83[582 -(361 + 219) ]]=v83[(418 -(51 + 44)) -(53 + 267) ];end elseif ((v84<=(3 + 5 + 23)) or (4479<4466)) then if ((2547>1225) and (v84<=((1755 -(1114 + 203)) -(15 + 398)))) then if (v84<=(1004 -((744 -(228 + 498)) + 964))) then if (v84==(78 -(13 + 44))) then local v157=v83[2];v81[v157]=v81[v157](v81[v157 + 1 ]);else local v159=0;local v160;while true do if (v159==(0 + 0 + (663 -(174 + 489)))) then v160=v83[2 + 0 ];v81[v160]=v81[v160](v13(v81,v160 + (851 -(20 + 830)) ,v83[3 + 0 ]));break;end end end elseif ((4671>2674) and (v84<=(149 -(116 + (26 -16))))) then v81[v83[1 + 1 ]]={};elseif ((v84>((2667 -(830 + 1075)) -(542 + 196))) or (3696<3327)) then local v231=0 -0 ;local v232;while true do if (v231==(0 + 0)) then v232=v83[2 + 0 ];v81[v232](v13(v81,v232 + 1 + 0 ,v83[3]));break;end end elseif (v83[4 -2 ]==v81[v83[9 -5 ]]) then v75=v75 + (1552 -(1126 + 425)) ;else v75=v83[(932 -(303 + 221)) -(118 + 287) ];end elseif (v84<=28) then if (v84<=(101 -(1344 -(231 + 1038)))) then for v212=v83[1123 -(118 + 1003) ],v83[8 -5 ] do v81[v212]=nil;end elseif (v84==(404 -(142 + 235))) then local v233=v83[9 -7 ];local v234,v235=v74(v81[v233](v81[v233 + 1 + 0 ]));v76=(v235 + v233) -(978 -(553 + 424)) ;local v236=0 -0 ;for v315=v233,v76 do local v316=0 + 0 ;while true do if (v316==(0 + 0)) then v236=v236 + 1 + 0 ;v81[v315]=v234[v236];break;end end end elseif ((v81[v83[2 + 0 ]]~=v83[2 + 2 ]) or (4542==2970)) then v75=v75 + 1 + 0 ;else v75=v83[(1168 -(171 + 991)) -3 ];end elseif (v84<=29) then do return v81[v83[5 -3 ]];end elseif (v84==(67 -37)) then v81[v83[(4 -3) + 1 ]]=v83[14 -11 ];else v81[v83[(2027 -1272) -(239 + 514) ]][v83[2 + 1 ]]=v81[v83[1333 -(797 + 532) ]];end elseif (v84<=(27 + 9)) then if (v84<=(12 + 21)) then if ((252<=1977) and (v84==(74 -42))) then local v162=1202 -(373 + 829) ;local v163;local v164;while true do if (v162==(732 -(476 + 255))) then for v358=1, #v80 do local v359=v80[v358];for v392=0, #v359 do local v393=1130 -(369 + 761) ;local v394;local v395;local v396;while true do if (v393==(1 + 0)) then v396=v394[2];if ((v395==v81) and (v396>=v163)) then v164[v396]=v395[v396];v394[1 -0 ]=v164;end break;end if (v393==(0 -0)) then v394=v359[v392];v395=v394[1];v393=1 -0 ;end end end end break;end if ((v162==(238 -(64 + 174))) or (1436==3775)) then v163=v83[1 + 1 ];v164={};v162=1 -(0 + 0) ;end end elseif (v81[v83[2]]~=v81[v83[340 -(144 + 192) ]]) then v75=v75 + (217 -(42 + 174)) ;else v75=v83[3 + 0 ];end elseif (v84<=(29 + 5)) then do return;end elseif ((v84==35) or (1618<930)) then local v242=v72[v83[2 + 1 ]];local v243;local v244={};v243=v10({},{__index=function(v318,v319) local v320=1504 -(363 + 1141) ;local v321;while true do if ((4723>4153) and (v320==(1580 -(1183 + 397)))) then v321=v244[v319];return v321[2 -1 ][v321[2 + 0 ]];end end end,__newindex=function(v322,v323,v324) local v325=v244[v323];v325[1 + 0 ][v325[1977 -(1913 + 62) ]]=v324;end});for v327=1 + 0 ,v83[10 -6 ] do local v328=1933 -(565 + 1368) ;local v329;while true do if (v328==0) then v75=v75 + (3 -2) ;v329=v71[v75];v328=(2678 -1016) -((4565 -3088) + (1432 -(111 + 1137))) ;end if (v328==(1 -0)) then if ((v329[1 + 0 ]==(901 -(564 + 292))) or (3654>=4654)) then v244[v327-(1 -0) ]={v81,v329[3]};else v244[v327-(1 + (158 -(91 + 67))) ]={v61,v329[3]};end v80[ #v80 + ((2982 -1980) -(938 + 63)) ]=v244;break;end end end v81[v83[2 + 0 ]]=v29(v242,v243,v62);else do return v81[v83[2]];end end elseif ((951<=1496) and (v84<=39)) then if (v84<=37) then local v165=1125 -(936 + 189) ;local v166;local v167;local v168;while true do if ((0 + 0)==v165) then v166=v72[v83[1616 -(391 + 1174 + 48) ]];v167=nil;v165=1 + (523 -(423 + 100)) ;end if (v165==(1139 -(782 + 356))) then v168={};v167=v10({},{__index=function(v360,v361) local v362=v168[v361];return v362[268 -(176 + 91) ][v362[2]];end,__newindex=function(v363,v364,v365) local v366=v168[v364];v366[1][v366[2]]=v365;end});v165=(1 + 3) -2 ;end if (v165==(2 -0)) then for v368=1093 -(975 + 117) ,v83[1879 -(157 + 1718) ] do local v369=0 + 0 ;local v370;while true do if (((0 -0)==v369) or (1736==571)) then v75=v75 + (3 -2) ;v370=v71[v75];v369=1;end if (v369==1) then if ((v370[1019 -(697 + 321) ]==45) or (896>4769)) then v168[v368-1 ]={v81,v370[3]};else v168[v368-(2 -1) ]={v61,v370[7 -4 ]};end v80[ #v80 + 1 ]=v168;break;end end end v81[v83[1229 -(322 + 905) ]]=v29(v166,v167,v62);break;end end elseif (v84>(165 -127)) then local v246=v83[2];v81[v246]=v81[v246](v13(v81,v246 + ((1362 -750) -(602 + 9)) ,v76));elseif  not v81[v83[2]] then v75=v75 + 1 ;else v75=v83[1192 -(449 + 740) ];end elseif (v84<=(912 -((1927 -1101) + 46))) then v81[v83[(1660 -(530 + 181)) -(245 + 702) ]]();elseif (v84==(129 -88)) then local v248=(881 -(614 + 267)) + 0 ;local v249;local v250;while true do if (v248==1) then for v418=v249 + 1 ,v83[1901 -(260 + 1638) ] do v7(v250,v81[v418]);end break;end if (v248==(440 -((414 -(19 + 13)) + 58))) then v249=v83[6 -4 ];v250=v81[v249];v248=1 + 0 ;end end else local v251=v83[3 -1 ];v81[v251]=v81[v251](v13(v81,v251 + (2 -1) ,v76));end elseif (v84<=(1268 -(902 + 303))) then if (v84<=(113 -61)) then if (v84<=(113 -66)) then if (v84<=44) then if (v84>43) then local v169=0 + 0 ;local v170;while true do if ((v169==(1690 -((1824 -703) + (1325 -756)))) or (1045<=1020)) then v170=v83[216 -(22 + 192) ];v81[v170](v13(v81,v170 + (684 -(483 + 200)) ,v83[(4187 -2721) -(1404 + 16 + 43) ]));break;end end else local v171=0;local v172;local v173;local v174;while true do if (v171==0) then v172=v83[5 -(4 -1) ];v173=v81[v172];v171=1 -(0 -0) ;end if (v171==(766 -((2280 -(1293 + 519)) + 297))) then v174=v83[565 -(334 + 228) ];for v372=1,v174 do v173[v372]=v81[v172 + v372 ];end break;end end end elseif ((v84<=(151 -106)) or (1160<=328)) then v81[v83[4 -2 ]]=v81[v83[5 -2 ]];elseif (v84>(14 + 32)) then local v253=236 -(141 + 95) ;local v254;while true do if (v253==(0 + 0)) then v254=v83[2];v81[v254]=v81[v254](v81[v254 + (2 -1) ]);break;end end else do return v81[v83[4 -2 ]]();end end elseif (v84<=(12 + 37)) then if (v84==(131 -83)) then local v177=v83[2];do return v13(v81,v177,v76);end else v81[v83[(3 -1) + 0 ]]=v81[v83[2 + 1 ]][v83[5 -1 ]];end elseif (v84<=(30 + 20)) then local v180=163 -(92 + 71) ;local v181;local v182;local v183;local v184;while true do if (v180==(0 + 0)) then v181=v83[2 -0 ];v182,v183=v74(v81[v181](v13(v81,v181 + (766 -(574 + 191)) ,v83[3 + 0 ])));v180=2 -1 ;end if (1==v180) then v76=(v183 + v181) -1 ;v184=0 + (0 -0) ;v180=(1627 -776) -((1095 -841) + 595) ;end if (v180==(128 -(55 + 71))) then for v375=v181,v76 do local v376=0;while true do if (v376==0) then v184=v184 + (1 -0) ;v81[v375]=v182[v184];break;end end end break;end end elseif (v84==(1841 -(573 + (2866 -1649)))) then if ((3808>2924) and v81[v83[5 -3 ]]) then v75=v75 + 1 + 0 ;else v75=v83[4 -1 ];end else v81[v83[941 -(714 + 225) ]]=v62[v83[(5 + 3) -5 ]];end elseif ((3891<4919) and (v84<=(79 -22))) then if (v84<=(6 + 10 + 38)) then if (v84==(75 -22)) then local v185=v83[808 -((273 -155) + 688) ];local v186={};for v214=49 -(25 + 23) , #v80 do local v215=v80[v214];for v257=0 + 0 , #v215 do local v258=1886 -(927 + 959) ;local v259;local v260;local v261;while true do if (v258==(3 -2)) then v261=v259[734 -(16 + 716) ];if ((v260==v81) and (v261>=v185)) then local v432=0 -(0 + 0) ;while true do if (v432==(97 -(11 + 86))) then v186[v261]=v260[v261];v259[2 -1 ]=v186;break;end end end break;end if (v258==(285 -(175 + 110))) then v259=v215[v257];v260=v259[2 -1 ];v258=4 -3 ;end end end end else v75=v83[1799 -(503 + 1293) ];end elseif ((v84<=(153 -98)) or (2234<=1502)) then local v188=0 + 0 ;local v189;local v190;local v191;while true do if (v188==((353 + 708) -(810 + 251))) then v189=v83[2 + 0 ];v190=v81[v189];v188=1 + 0 ;end if (((1 + 0)==v188) or (2512<432)) then v191=v83[536 -(43 + 490) ];for v378=734 -(711 + 22) ,v191 do v190[v378]=v81[v189 + v378 ];end break;end end elseif ((v84>(216 -(100 + 60))) or (1848==865)) then local v262=859 -(240 + 619) ;local v263;local v264;while true do if (v262==(0 + 0)) then v263=v83[2 -0 ];v264=v81[v83[1 + 2 ]];v262=1745 -(1344 + 400) ;end if (v262==((1502 -(709 + 387)) -((2113 -(673 + 1185)) + 150))) then v81[v263 + 1 ]=v264;v81[v263]=v264[v83[4 + 0 ]];break;end end elseif  not v81[v83[2]] then v75=v75 + 1 + (0 -0) ;else v75=v83[12 -9 ];end elseif (v84<=60) then if (v84<=(187 -129)) then do return;end elseif (v84==((5773 -3975) -(404 + 1335))) then v81[v83[(671 -263) -(183 + 160 + 63) ]]=v83[3]~=(0 -0) ;elseif ((v81[v83[2 + 0 ]]==v83[2 + 2 ]) or (4682<=4541)) then v75=v75 + (338 -(10 + 327)) ;else v75=v83[3 + 0 ];end elseif (v84<=(399 -(89 + 29 + 220))) then local v192=v81[v83[2 + 2 ]];if ( not v192 or (3026>=4046)) then v75=v75 + (450 -(108 + 341)) ;else v81[v83[1 + 1 ]]=v192;v75=v83[12 -9 ];end elseif (v84==(1555 -(711 + 782))) then local v268=v83[3 -(1 -0) ];local v269,v270=v74(v81[v268](v13(v81,v268 + (470 -(270 + 49 + 150)) ,v83[1 + 2 ])));v76=(v270 + v268) -(1820 -(580 + 1239)) ;local v271=0 -(0 -0) ;for v340=v268,v76 do v271=v271 + 1 + 0 ;v81[v340]=v269[v271];end else local v272=0;local v273;local v274;local v275;while true do if (v272==1) then v275=(0 -0) + 0 ;for v419=v273,v83[2 + 2 ] do v275=v275 + (2 -1) ;v81[v419]=v274[v275];end break;end if (v272==(0 + 0)) then v273=v83[(3049 -(446 + 1434)) -(645 + 522) ];v274={v81[v273](v13(v81,v273 + 1 + 0 ,v83[14 -11 ]))};v272=2 -1 ;end end end elseif (v84<=74) then if ((2008>638) and (v84<=(1904 -(1045 + 791)))) then if ((1775<=3233) and (v84<=65)) then if ((v84>(161 -97)) or (4543==1997)) then do return v81[v83[2]]();end else v81[v83[2]][v83[4 -(2 -1) ]]=v83[(2356 -(559 + 1288)) -(351 + 154) ];end elseif ((v84<=(1640 -((3212 -(609 + 1322)) + 293))) or (3102<728)) then local v195=v83[268 -((482 -(13 + 441)) + 238) ];local v196=v81[v83[6 -3 ]];v81[v195 + (1560 -(1381 + 178)) ]=v196;v81[v195]=v196[v83[4 + 0 ]];elseif ((345==345) and (v84>67)) then v81[v83[2 + 0 ]]=v83[2 + 1 ]~=(0 -0) ;else v61[v83[2 + 1 ]]=v81[v83[472 -(381 + 89) ]];end elseif (v84<=(63 + 8)) then if ((v84<=(47 + 22)) or (2827<378)) then v81[v83[2 -0 ]]= #v81[v83[3]];elseif ((v84==(1226 -(1074 + 82))) or (3476<2597)) then local v279=0;local v280;while true do if ((3079<4794) and (v279==(0 -0))) then v280=v83[1786 -(214 + 1570) ];v81[v280](v81[v280 + 1 ]);break;end end else local v281=v83[1457 -(990 + 465) ];local v282,v283=v74(v81[v281](v81[v281 + 1 ]));v76=(v283 + v281) -(1 + (0 -0)) ;local v284=0 + 0 ;for v343=v281,v76 do local v344=0;while true do if (0==v344) then v284=v284 + 1 + 0 ;v81[v343]=v282[v284];break;end end end end elseif (v84<=72) then v81[v83[7 -5 ]][v83[1729 -(1668 + 58) ]]=v83[4];elseif ((4854>4464) and (v84>73)) then v81[v83[628 -((1341 -829) + 114) ]]=v29(v72[v83[7 -4 ]],nil,v62);else local v286=0;local v287;local v288;local v289;while true do if (v286==(1 -0)) then v289=0;for v424=v287,v83[(64 -51) -9 ] do local v425=0 + 0 ;while true do if (v425==(0 + 0)) then v289=v289 + 1 + 0 ;v81[v424]=v288[v289];break;end end end break;end if ((v286==(0 -0)) or (4912==3758)) then v287=v83[1996 -(5 + 104 + 1885) ];v288={v81[v287](v13(v81,v287 + 1 ,v83[1472 -(1269 + 200) ]))};v286=1;end end end elseif ((126<=3482) and (v84<=(150 -71))) then if ((v84<=(891 -(98 + (2603 -1886)))) or (2374==4374)) then if (v84==(27 + 48)) then v81[v83[2]]=v61[v83[829 -(802 + 24) ]];elseif (v83[2]==v81[v83[6 -2 ]]) then v75=v75 + 1 ;else v75=v83[3];end elseif (v84<=(96 -19)) then if ((1575==1575) and (v81[v83[1 + 1 ]]~=v81[v83[4 + 0 ]])) then v75=v75 + 1 ;else v75=v83[3];end elseif (v84==(13 + 65)) then local v292=v83[1 + 1 ];v81[v292]=v81[v292]();else local v294=v83[5 -3 ];v81[v294]=v81[v294](v13(v81,v294 + (3 -2) ,v83[2 + 1 ]));end elseif (v84<=(15 + 19 + 48)) then if ((v84<=80) or (2234==1455)) then v81[v83[2 + (0 -0) ]]= #v81[v83[3 + 0 ]];elseif (v84==(38 + 43)) then local v296=v83[1436 -(797 + 636) ];local v297=v81[v296];for v345=v296 + (4 -3) ,v83[4] do v297=v297   .. v81[v345] ;end v81[v83[1621 -(781 + 646 + 192) ]]=v297;else v81[v83[2]]=v61[v83[3]];end elseif (v84<=(29 + 54)) then v81[v83[4 -2 ]][v83[3 + 0 ]]=v81[v83[4]];elseif (v84==(39 + 45)) then v81[v83[2]]();else v81[v83[2]]=v81[v83[329 -(192 + 134) ]][v83[7 -3 ]];end v75=v75 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
